# Generated by Django 4.0.3 on 2022-04-01 14:20

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import extensions.upload_file_path


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('phone', models.CharField(max_length=12, unique=True, validators=[django.core.validators.RegexValidator(message='Invalid phone number.', regex='^989\\d{2}\\s*?\\d{3}\\s*?\\d{4}$')], verbose_name='phone')),
                ('first_name', models.CharField(blank=True, max_length=100, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=100, verbose_name='last name')),
                ('author', models.BooleanField(blank=True, default=False, verbose_name='author')),
                ('special_user', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Special User')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('two_step_password', models.BooleanField(default=False, help_text='is active two step password?', verbose_name='two step password')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PhoneOtp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=12, unique=True, validators=[django.core.validators.RegexValidator(message='Invalid phone number.', regex='^989\\d{2}\\s*?\\d{3}\\s*?\\d{4}$')], verbose_name='phone')),
                ('otp', models.CharField(max_length=6)),
                ('count', models.PositiveSmallIntegerField(default=0, help_text='Number of otp sent')),
                ('verify', models.BooleanField(default=False, verbose_name='is verify')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('slug', models.SlugField(unique=True, verbose_name='Slug')),
                ('status', models.BooleanField(default=False, verbose_name='Status')),
                ('parent', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='core.category', verbose_name='SubCategory')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('slug', models.SlugField(blank=True, unique=True, verbose_name='Slug')),
                ('body', models.TextField(verbose_name='Content')),
                ('image', models.ImageField(upload_to=extensions.upload_file_path.upload_file_path, verbose_name='Image')),
                ('summery', models.TextField(max_length=400, verbose_name='Summery')),
                ('publish', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Publish Time')),
                ('create', models.DateTimeField(auto_now_add=True, verbose_name='Create Time')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Update Time')),
                ('special', models.BooleanField(default=False, verbose_name='Is special blog?')),
                ('status', models.CharField(choices=[('p', 'publish'), ('d', 'draft')], max_length=1, verbose_name='Status')),
                ('visits', models.PositiveIntegerField(default=0, verbose_name='Visits')),
                ('author', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='blogs', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
                ('category', models.ManyToManyField(blank=True, default=None, related_name='blogs', to='core.category', verbose_name='Categories')),
                ('likes', models.ManyToManyField(blank=True, related_name='blogs_like', to=settings.AUTH_USER_MODEL, verbose_name='Likes')),
            ],
            options={
                'verbose_name': 'Blog',
                'verbose_name_plural': 'Blogs',
                'ordering': ('-publish', '-updated'),
            },
        ),
    ]
